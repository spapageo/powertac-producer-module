package org.powertac.producer.hydro;


import java.io.FileWriter;
import java.io.IOException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.powertac.common.Competition;
import org.powertac.producer.utils.Curve;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.thoughtworks.xstream.XStream;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:test-config.xml" })
@DirtiesContext
public class RunOfRiverTest
{

  @Test
  public void dataGenerateXml() throws IOException
  {
    Curve inputFlow = new Curve();
    double[] y = {150.93,139.35,178.59,174.37,136.75,133.64,128.89,127.25,128.73
                  ,144.62,156.51,181.89,141.64,159.33,149.30,121.12,179.54,
                  232.12,258.08,237.18,220.32,230.75,256.72,257.83,251.68,229.52,
                  252.37,251.43,222.80,187.57,232.88,226.58,207.18,197.13,199.27,
                  163.70,150.40,155.70,211.47,215.75,217.23,219.50,213.97,177.71,
                  203.06,221.15,215.45,220.16,215.02,211.03,200.98,194.78,183.42,
                  214.86,190.08,192.33,183.75,194.89,210.47,222.11,214.89,203.90,
                  217.38,186.53,184.18,213.71,191.74,224.60,201.29,204.02,227.96,
                  185.46,220.18,209.19,182.50,224.28,229.55,219.83,198.23,174.27,
                  198.77,237.54,227.49,225.27,213.58,242.83,208.50,225.17,228.20,
                  244.45,293.15,319.49,354.15,351.33,374.75,348.11,303.55,278.62,
                  314.15,319.30,289.06,299.55,278.69,261.02,275.69,202.89,242.91,
                  267.86,251.20,270.84,270.20,282.11,255.64,243.84,253.75,234.95,
                  261.82,257.20,226.31,219.35,257.10,241.93,246.79,250.24,230.08,
                  254.66,231.22,238.59,267.91,289.35,248.45,270.34,335.20,338.03,
                  366.69,423.45,442.26,444.96,449.96,451.19,461.15,457.13,471.72,
                  477.84,476.64,462.09,486.46,491.88,497.34,494.46,491.72,486.49,
                  480.88,481.12,498.41,493.33,491.76,482.40,492.29,494.48,494.78,
                  491.09,478.23,482.07,489.95,489.84,492.75,488.38,462.97,440.38,
                  426.90,428.48,440.70,432.90,480.63,451.82,423.08,396.45,394.52,
                  381.41,388.90,418.33,428.18,405.74,409.38,359.30,370.30,385.97,
                  376.35,376.27,365.44,343.22,306.27,294.97,320.97,331.74,289.69,
                  269.50,289.15,279.23,283.67,262.26,259.69,255.34,244.33,244.51,
                  236.17,226.47,238.11,209.22,203.91,225.66,221.99,191.54,198.33,
                  205.45,194.11,171.04,181.43,197.49,185.96,194.35,196.43,200.32,
                  160.97,149.27,188.71,189.23,194.86,189.84,195.41,175.54,157.37,
                  161.75,173.32,186.87,195.82,167.11,169.41,148.44,146.42,140.38,
                  165.04,143.84,123.20,101.61,97.750,116.29,117.95,124.26,123.54,
                  139.54,120.89,110.25,128.37,108.38,104.58,109.73,116.92,109.42,
                  104.07,102.33,122.03,123.26,104.29,103.62,91.750,96.140,116.95,
                  109.68,110.71,101.40,105.67,78.380,80.710,90.290,100.03,108.30,
                  117.16,96.900,93.890,94.100,129.53,114.42,100.36,113.98,133.06,
                  136.70,127.35,122.11,119.30,103.62,114.25,118.22,115.95,88.670,
                  107.94,118.67,104.45,131.19,126.84,121.48,94.980,96.540,131.90,
                  131.34,124.03,116.47,117.32,118.13,117.99,132.40,116.32,115.21,
                  126.75,109.51,112,129.35,116.82,143.01,132.10,127.81,121.95,
                  135.30,131.32,127.96,116.67,114.47,113.17,117.26,109.72,123.01,
                  121.85,127.22,125.33,122.18,122.19,125.14,136.47,134.70,139.05,
                  131.83,136.58,138.34,122.26,140.76,130.10,141.18,132.31,117.35,
                  133.08,112.71,120.88,134.15,121.01,132.05,124.80,125.95,118.71,
                  131.57,136.90,127.24,112.67,126.07,123.33};
    for(int i = 0; i < 365; i++){
      inputFlow.add(i, y[i]);
    }
    inputFlow.value(300);
    
    double[] x = {0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.20,0.21,
                  0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.30,0.31,0.32,0.33,
                  0.34,0.35,0.36,0.37,0.38,0.39,0.40,0.41,0.42,0.43,0.44,0.45,
                  0.46,0.47,0.48,0.49,0.50,0.51,0.52,0.53,0.54,0.55,0.56,0.57,
                  0.58,0.59,0.60,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,
                  0.70,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.80,0.81,
                  0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.90,0.91,0.92,0.93,
                  0.94,0.95,0.96,0.97,0.98,0.99,1};
    double[] y2 = {54,56.7510059257987,59.3427468223978,61.7806965819306,
                64.0703290965304,66.2171182583305,68.2265379594641,
                70.1040620920646,71.8551645482652,73.4853192201992,
                75,76.4046807798008,77.7048354517348,78.9059379079354,
                80.0134620405359,81.0328817416695,81.9696709034696,
                82.8293034180694,83.6172531776022,84.3389940742013,
                85,85.6052709549983,86.1579113706630,86.6605517863277,
                87.1158227413260,87.5263547749914,87.8947784266575,
                88.2237242356579,88.5158227413260,88.7737044829955,
                89,89.1972354002061,89.3675190656132,89.5128549467537,
                89.6352469941601,89.7366991583648,89.8192153899004,
                89.8847996392992,89.9354558570938,89.9731879938166,
                90,90.0177874441773,90.0280123668842,90.0320284266575,
                90.0311892820337,90.0268485915493,90.0203600137410,
                90.0130772071453,90.0063538302989,90.0015435417382,90,
                90.0026148230849,90.0084314668499,90.0160313466163,
                90.0239958777053,90.0309064754380,90.0353445551357,
                90.0358915321196,90.0311288217108,90.0196378392305,90,
                89.9712532634833,89.9342617657162,89.8903461868774,
                89.8408272071453,89.7870255066987,89.7302617657163,
                89.6718566643765,89.6131308828581,89.5554051013397,
                89.5000000000000,89.4478721229818,89.3985214702851,
                89.3510839058743,89.3046952937135,89.2584914977671,
                89.2116083819993,89.1631818103744,89.1123476468568,
                89.0582417554105,89,88.9367582445895,88.8676523531433,
                88.7918181896256,88.7083916180007,88.6165085022329,
                88.5153047062865,88.4039160941257,88.2814785297149,
                88.1471278770182,88 };
    Curve efficiency = new Curve();
    
    for(int i = 0;i < x.length; i++){
      efficiency.add(x[i], y2[i]);
    }
    efficiency.value(0.5);
    
    Competition.newInstance("run of river");
    RunOfRiver river = new RunOfRiver(inputFlow, 20, 500, efficiency, 1000000, 80, 0.95, -300000);
    FileWriter fw = new FileWriter("data/runoftheriver.xml");
    XStream xstream = new XStream();
    xstream.autodetectAnnotations(true);
    xstream.toXML(river, fw);
    fw.close();
    
  }

}
